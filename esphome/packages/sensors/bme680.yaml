# https://esphome.io/components/sensor/bme680.html

substitutions:
  bme_address: "0x76"
  bme_update_interval: "30s"
  humidity_offset: "0"
  iaq_offset: "0"
  pressure_offset: "0"
  temperature_offset: "0"

number:
  - platform: template
    name: "Temperature Offset"
    id: temperature_offset_ui
    unit_of_measurement: "Â°C"
    min_value: -10
    max_value: 10
    step: 0.1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:thermometer"
    entity_category: config
    on_value:
      - lambda: 'id(bme680_sensor).update();'

  - platform: template
    name: "Humidity Offset"
    id: humidity_offset_ui
    unit_of_measurement: "%"
    min_value: -50
    max_value: 50
    step: 0.1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:water-percent"
    entity_category: config
    on_value:
      - lambda: 'id(bme680_sensor).update();'

  - platform: template
    name: "Pressure Offset"
    id: pressure_offset_ui
    unit_of_measurement: "hPa"
    min_value: -500
    max_value: 500
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:gauge"
    entity_category: config
    on_value:
      - lambda: 'id(bme680_sensor).update();'

  - platform: template
    name: "IAQ Offset"
    id: iaq_offset_ui
    unit_of_measurement: "IAQ"
    min_value: -400
    max_value: 400
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:gauge"
    entity_category: config

sensor:
  - platform: bme680
    id: bme680_sensor
    address: "${bme_address}"
    update_interval: "${bme_update_interval}"
    temperature:
      name: "Temperature"
      filters:
        - offset: ${temperature_offset}
        - lambda: "return x + id(temperature_offset_ui).state;"
    humidity:
      name: "Humidity"
      id: "humidity"
      filters:
        - offset: ${humidity_offset}
        - lambda: "return x + id(humidity_offset_ui).state;"
    pressure:
      name: "Pressure"
      filters:
        - offset: ${pressure_offset}
        - lambda: "return x + id(pressure_offset_ui).state;"
    gas_resistance:
      name: "Gas Resistance"
      id: "gas_resistance"
  - platform: template
    name: "Air Quality"
    device_class: aqi
    id: iaq
    icon: "mdi:gauge"
    filters:
      - offset: ${iaq_offset}
      - lambda: "return x + id(iaq_offset_ui).state;"
    lambda: |-
      return log(id(gas_resistance).state) + 0.04 *  id(humidity).state;
    state_class: "measurement"

text_sensor:
  - platform: template
    name: "IAQ Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if ( int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) >= 51 && int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) >= 101 && int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) >= 151 && int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) >= 201 && int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) >= 251 && int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) >= 351) {
        return {"Extremely polluted"};
      }
      else {
        return {"error"};
      }
