i2s_audio:
  - id: i2s
    i2s_lrclk_pin: "${i2s_lrclk_pin}"
    i2s_bclk_pin: "${i2s_bclk_pin}"

microphone:
  - platform: i2s_audio
    id: mic
    channel: left
    adc_type: external
    i2s_din_pin: "${i2s_din_pin}"
    i2s_audio_id: i2s
    pdm: false

# does not work in ESPHome 2025.3.3
#media_player:
#  - platform: i2s_audio
#    id: mp
#    name: Media Player
#    dac_type: external
#    i2s_dout_pin: "${i2s_dout_pin}"
#    mode: mono

speaker:
  - platform: i2s_audio
    dac_type: external
    i2s_dout_pin: GPIO33
    id: spk

voice_assistant:
  id: va
  microphone: mic
  #media_player: mp
  speaker: spk
  #noise_suppression_level: 2
  #auto_gain: 31dBFS
  volume_multiplier: 1.0
  on_listening:
    - light.turn_on:
        id: led
        blue: 100%
        red: 0%
        green: 0%
        brightness: 100%
        effect: pulse
  on_tts_start:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 100%
        brightness: 100%
        effect: pulse
  on_end:
    - delay: 100ms
    - light.turn_off: led
  on_error:
    - light.turn_on:
        id: led
        blue: 0%
        red: 100%
        green: 0%
        brightness: 100%
        effect: none
    - delay: 1s
    - light.turn_off: led
    - lambda: |-
        if (code == "wake-provider-missing" || code == "wake-engine-missing") {
          id(use_wake_word).turn_off();
        }

switch:
  - platform: template
    name: "Use Wake Word"
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - light.turn_off: led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - light.turn_off: led

esphome:
  min_version: 2023.10.0
  on_boot:
    - priority: -100
      then:
        - wait_until: api.connected
        - delay: 1s
        - if:
            condition:
              switch.is_on: use_wake_word
            then:
              - voice_assistant.start_continuous:
